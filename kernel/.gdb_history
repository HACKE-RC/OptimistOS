target remote :1234
b virtualAddrToPTE
b getNextLevelPointer
c
target remote :1234
b getNextLevelPointer
b virtualAddrToPTE(
b virtualAddrToPTE
c
ni
p virtualAddr
c
ni
p virtualAddr
ls
l
p virtualA
p virtualAddr
p allocate
p flags
p pageSize 
ni
ni
!zsh
ni
p pml4Entry 
p pml3Entry 
p pml2Entry 
p pml1Entry 
ni
p PML4
ni
p pml4
p PML4
p *PML4
p/x *PML4
ni
p entry
p/x entry
p/x entry.value 
p/x entry.value[0]
p/x entry.getAddress()
p/x toVirtualAddr(void*)(entry.getAddress())
p/x (PageDirectoryEntry*)toVirtualAddr(void*)(entry.getAddress())
p/x *(PageDirectoryEntry*)toVirtualAddr(void*)(entry.getAddress())
p/x *(PageTable*)toVirtualAddr(void*)(entry.getAddress())
ni
p nextLevelPointer 
ni
p PML3
p *PML3
p/x *PML3
p/x *PML3[0[
p/x *PML3->entries
p/x (*PML3)->entries
p/x (*PML3)->entries[0]
p/x (*PML3)->entries[0].getAddress 
p/x (*PML3)->entries[0].getAddress()
p/x toVirtualAddr(void*)((*PML3)->entries[0].getAddress())
p/x (PageTable*)toVirtualAddr(void*)((*PML3)->entries[0].getAddress())
p/x *(PageTable*)toVirtualAddr(void*)((*PML3)->entries[0].getAddress())
p/x (*PML3)->entries[0].getAddress()
p/x *PML3
p/x *PML4
target remote :1234
b virtualAddrToPTE
b getNextLevelPointer(PageDirectoryEntry&, bool, void*, unsigned long) 
b getNextLevelPointer
c
p nextLevelPointer 
target remote :1234
c
ni
ni
p pml1Entry 
p pml4Entry 
ls
p PML4
ni
p *PML4
ni
p entry
p allcoate
p allocate
p virtualAddr
p pageSize 
ni
p nextLevelPointer 
p *nextLevelPointer 
p *(PageTable*)nextLevelPointer 
ni
p entry.value
p entry.getFlag 
p entry.getFlag(Present)
p entry.getFlag(ReadWrite)
l
ni
p PML3
p PML4
p *PML4
p PML3
p/x *PML4
p/x getNextLevelPointer(PageDirectoryEntry&, bool, void*, unsigned long)(PML4->entries[0], true, 0x0000, _1GB)
p/x getNextLevelPointer(PageDirectoryEntry&, bool, void*, unsigned long)(PML4->entries[0], true, 0x0000, 0)
ni
c
p PML3
p (*PML4)
p (*PML4).entries[0].getAddress()
p/x (*PML4).entries[0].getAddress()
p/x toVirtualAddr(void*)((*PML4).entries[0].getAddress())
ni
p PML4
p *PML4
ni
p flags
p (pageTableFlag)flags
p (pageTableFlag)flags
p (pageTableFlag)flags & LargerPages 
p (flags & LargerPages) 
p (flags & NoExec) 
p (flags & LargerPages) 
ni
p entry
p *entry
ni
p entry.value
p entry.getni
p entry.getFlag(LargerPages)
p entry.getFlag(LargerPages)
p entry.getFlag(LargerPages)
p entry
p entry.getAddress()
l
p entry->getAddress()
p entry->getFlag()
p entry->getFlag(Present)
p entry->getFlag(ReadWrite)
p entry->getFlag(NoExec)
p entry->getFlag(LargerPages)
ni
ni
ni
c
finish
finish
ni
ni
p *PML3
p *PML4
p *PML4x
p *PML4
ni
p *PML4
target remote :1234
ni
target remote :1234
b paging/paging.cpp:75
c
target remote :1234
target remote :1234
b paging.cpp:74
b paging.cpp:76
b paging.cpp:75
c
ni
si
ni
si
ni
si
target remote :1234
target remote :1234
b paging.cpp:62
c
bt
target remote :1234
target remote :1234
b paging.cpp:72
c
ni
